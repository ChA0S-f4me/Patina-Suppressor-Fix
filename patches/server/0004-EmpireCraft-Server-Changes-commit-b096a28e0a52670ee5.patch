From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: steve <50219120+steveb05@users.noreply.github.com>
Date: Sun, 12 Dec 2021 17:55:52 +0100
Subject: [PATCH] EmpireCraft Server Changes commit
 b096a28e0a52670ee5bbd0295e27a48e5fcb41a0

Don't save Fireworks

Fireworks can bug out and not detonate, and an automated
launcher can very easily fill a chunk.

Prevent saving Fireworks so that chunk unloads will wipe a chunks fireworks in this case.

Do not drop items from Give command

Don't use force unload for keep spawn setting change

Don't trigger Lootable Refresh for non player interaction

dont load chunks for physics

Do not process chat/commands before player has joined

diff --git a/src/main/java/net/minecraft/server/commands/GiveCommand.java b/src/main/java/net/minecraft/server/commands/GiveCommand.java
index a0dc380e90415de9068ea408d62a1605c82631df..be8380837c1ddcd5b27694de2d5c3a9a2760c093 100644
--- a/src/main/java/net/minecraft/server/commands/GiveCommand.java
+++ b/src/main/java/net/minecraft/server/commands/GiveCommand.java
@@ -45,6 +45,7 @@ public class GiveCommand {
                     k -= l;
                     ItemStack itemStack = item.createItemStack(l, false);
                     boolean bl = serverPlayer.getInventory().add(itemStack);
+                    if (true) { continue; } // EMC - never drop items
                     if (bl && itemStack.isEmpty()) {
                         itemStack.setCount(1);
                         ItemEntity itemEntity2 = serverPlayer.drop(itemStack, false, false, true); // Paper - Fix duplicating /give items on item drop cancel
diff --git a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
index 13975ccbc24cfaef5eab1417b3e7ec2cbb3e78b7..3e6bce7ed4c2216eae6f31549e990abce0a485bf 100644
--- a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
+++ b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
@@ -2113,6 +2113,7 @@ public class ServerGamePacketListenerImpl implements ServerPlayerConnection, Ser
     private void handleChat(TextFilter.FilteredText message) {
         if (this.player.isRemoved() || this.player.getChatVisibility() == ChatVisiblity.HIDDEN) { // CraftBukkit - dead men tell no tales
             this.send(new ClientboundChatPacket((new TranslatableComponent("chat.disabled.options")).withStyle(ChatFormatting.RED), ChatType.SYSTEM, Util.NIL_UUID));
+        } else if (!player.didPlayerJoinEvent) { return; // EMC - do not handle chat messages before they joined
         } else {
             this.player.resetLastActionTime();
             String s = message.getRaw();
diff --git a/src/main/java/net/minecraft/world/entity/projectile/FireworkRocketEntity.java b/src/main/java/net/minecraft/world/entity/projectile/FireworkRocketEntity.java
index 9930f7a0681899017329bd2c599db7308310b395..e923624d5c39fe947fc391e36836f222ac008e95 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/FireworkRocketEntity.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/FireworkRocketEntity.java
@@ -358,4 +358,10 @@ public class FireworkRocketEntity extends Projectile implements ItemSupplier {
     public boolean isAttackable() {
         return false;
     }
+    // EMC start
+    @Override
+    public boolean shouldBeSaved() {
+        return false;
+    }
+    // EMC end
 }
diff --git a/src/main/java/net/minecraft/world/level/Level.java b/src/main/java/net/minecraft/world/level/Level.java
index 861ee8f112776f1115a1416eeaaad273a20d06a5..f504b2a4de27efd213573ec4694d0defccf5a046 100644
--- a/src/main/java/net/minecraft/world/level/Level.java
+++ b/src/main/java/net/minecraft/world/level/Level.java
@@ -857,7 +857,8 @@ public abstract class Level implements LevelAccessor, AutoCloseable {
 
     public void neighborChanged(BlockPos pos, Block sourceBlock, BlockPos neighborPos) {
         if (!this.isClientSide) {
-            BlockState iblockdata = this.getBlockState(pos);
+            BlockState iblockdata = this.getBlockStateIfLoaded(pos); // EMC
+            if (iblockdata == null) return; // EMC
 
             try {
                 // CraftBukkit start
diff --git a/src/main/java/net/minecraft/world/level/block/entity/RandomizableContainerBlockEntity.java b/src/main/java/net/minecraft/world/level/block/entity/RandomizableContainerBlockEntity.java
index da00f75ccc9f8c2e2174d4450479202a50844245..fe8d0a0a25b244530b0c56f1bdb085e9d2a64eed 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/RandomizableContainerBlockEntity.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/RandomizableContainerBlockEntity.java
@@ -69,6 +69,7 @@ public abstract class RandomizableContainerBlockEntity extends BaseContainerBloc
     }
 
     public void unpackLootTable(@Nullable Player player) {
+        if (player == null) return; // EMC
         if (this.lootableData.shouldReplenish(player) && this.level.getServer() != null) { // Paper
             LootTable lootTable = this.level.getServer().getLootTables().get(this.lootTable);
             if (player instanceof ServerPlayer) {
diff --git a/src/main/java/net/minecraft/world/level/block/state/BlockBehaviour.java b/src/main/java/net/minecraft/world/level/block/state/BlockBehaviour.java
index 61590f2f04a797235299f1bd6b78a08f5bfe4a33..d7688e8398792a17329565cf92152285dd9f0ec4 100644
--- a/src/main/java/net/minecraft/world/level/block/state/BlockBehaviour.java
+++ b/src/main/java/net/minecraft/world/level/block/state/BlockBehaviour.java
@@ -967,7 +967,8 @@ public abstract class BlockBehaviour {
                 Direction enumdirection = aenumdirection[l];
 
                 blockposition_mutableblockposition.setWithOffset(pos, enumdirection);
-                BlockState iblockdata = world.getBlockState(blockposition_mutableblockposition);
+                BlockState iblockdata = world.getBlockStateIfLoaded(blockposition_mutableblockposition); // EMC
+                if (iblockdata == null) { continue; } // EMC
                 BlockState iblockdata1 = iblockdata.updateShape(enumdirection.getOpposite(), this.asState(), world, blockposition_mutableblockposition, pos);
 
                 Block.updateOrDestroy(iblockdata, iblockdata1, world, blockposition_mutableblockposition, flags, maxUpdateDepth);
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
index 028663b86970b8a1ae3e5275429516ee00ef0a04..524daf4250479b487c8ce643896bb707b35c0773 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
@@ -407,7 +407,7 @@ public class CraftWorld extends CraftRegionAccessor implements World {
 
     @Override
     public boolean unloadChunk(int x, int z) {
-        return this.unloadChunk(x, z, true);
+        return this.unloadChunkRequest(x, z); // Paper
     }
 
     @Override
