From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: foss-mc <69294560+foss-mc@users.noreply.github.com>
Date: Tue, 27 Jul 2021 02:02:32 +0000
Subject: [PATCH] EmpireCraft Server Changes commit
 82606df395f469190a4b0f36394f4195c1286e8d

Don't save Fireworks

Fireworks can bug out and not detonate, and an automated
launcher can very easily fill a chunk.

Prevent saving Fireworks so that chunk unloads will wipe a chunks fireworks in this case.

Fix Give command

Don't use force unload for keep spawn setting change

Don't trigger Lootable Refresh for non player interaction

dont load chunks for physics

diff --git a/src/main/java/net/minecraft/server/commands/GiveCommand.java b/src/main/java/net/minecraft/server/commands/GiveCommand.java
index a0dc380e90415de9068ea408d62a1605c82631df..be8380837c1ddcd5b27694de2d5c3a9a2760c093 100644
--- a/src/main/java/net/minecraft/server/commands/GiveCommand.java
+++ b/src/main/java/net/minecraft/server/commands/GiveCommand.java
@@ -45,6 +45,7 @@ public class GiveCommand {
                     k -= l;
                     ItemStack itemStack = item.createItemStack(l, false);
                     boolean bl = serverPlayer.getInventory().add(itemStack);
+                    if (true) { continue; } // EMC - never drop items
                     if (bl && itemStack.isEmpty()) {
                         itemStack.setCount(1);
                         ItemEntity itemEntity2 = serverPlayer.drop(itemStack, false, false, true); // Paper - Fix duplicating /give items on item drop cancel
diff --git a/src/main/java/net/minecraft/world/entity/projectile/FireworkRocketEntity.java b/src/main/java/net/minecraft/world/entity/projectile/FireworkRocketEntity.java
index 3ac0d0419cbdacabf647a530a82ddf67ddaa13b7..a1e473800ccaf00283f7233b53536caa92a0db4d 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/FireworkRocketEntity.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/FireworkRocketEntity.java
@@ -355,4 +355,10 @@ public class FireworkRocketEntity extends Projectile implements ItemSupplier {
     public boolean isAttackable() {
         return false;
     }
+    // EMC start
+    @Override
+    public boolean shouldBeSaved() {
+        return false;
+    }
+    // EMC end
 }
diff --git a/src/main/java/net/minecraft/world/level/Level.java b/src/main/java/net/minecraft/world/level/Level.java
index e3a41a1a0e9e4936b1a4bd74c9379cb0f38ab74c..5000c91aceaa49a82161f57af683d2d08340efd4 100644
--- a/src/main/java/net/minecraft/world/level/Level.java
+++ b/src/main/java/net/minecraft/world/level/Level.java
@@ -901,7 +901,8 @@ public abstract class Level implements LevelAccessor, AutoCloseable {
 
     public void neighborChanged(BlockPos pos, Block sourceBlock, BlockPos neighborPos) {
         if (!this.isClientSide) {
-            BlockState iblockdata = this.getBlockState(pos);
+            BlockState iblockdata = this.getTypeIfLoaded(pos); // EMC
+            if (iblockdata == null) return; // EMC
 
             try {
                 // CraftBukkit start
diff --git a/src/main/java/net/minecraft/world/level/block/entity/RandomizableContainerBlockEntity.java b/src/main/java/net/minecraft/world/level/block/entity/RandomizableContainerBlockEntity.java
index ac564148956beb984650341c5c0994573f4f7225..3b85ca881235d604e24e924e4bb8490ad0612c4b 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/RandomizableContainerBlockEntity.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/RandomizableContainerBlockEntity.java
@@ -69,6 +69,7 @@ public abstract class RandomizableContainerBlockEntity extends BaseContainerBloc
     }
 
     public void unpackLootTable(@Nullable Player player) {
+        if (player == null) return; // EMC
         if (this.lootableData.shouldReplenish(player) && this.level.getServer() != null) { // Paper
             LootTable lootTable = this.level.getServer().getLootTables().get(this.lootTable);
             if (player instanceof ServerPlayer) {
diff --git a/src/main/java/net/minecraft/world/level/block/state/BlockBehaviour.java b/src/main/java/net/minecraft/world/level/block/state/BlockBehaviour.java
index 04d5ef90cd4171f9360017ac0c01ce48ae6ec983..db06add3e6027c04b864c60d30b0d0622732a5d8 100644
--- a/src/main/java/net/minecraft/world/level/block/state/BlockBehaviour.java
+++ b/src/main/java/net/minecraft/world/level/block/state/BlockBehaviour.java
@@ -890,7 +890,8 @@ public abstract class BlockBehaviour {
                 Direction enumdirection = aenumdirection[l];
 
                 blockposition_mutableblockposition.setWithOffset((Vec3i) pos, enumdirection);
-                BlockState iblockdata = world.getBlockState(blockposition_mutableblockposition);
+                BlockState iblockdata = world.getTypeIfLoaded(blockposition_mutableblockposition); // EMC
+                if (iblockdata == null) { continue; } // EMC
                 BlockState iblockdata1 = iblockdata.updateShape(enumdirection.getOpposite(), this.asState(), world, blockposition_mutableblockposition, pos);
 
                 Block.updateOrDestroy(iblockdata, iblockdata1, world, blockposition_mutableblockposition, flags, maxUpdateDepth);
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
index 2e79e2a23a4aec4b526814f7e959232c0a074860..75855b03512dbb8d2aa1869bac30abe0794d41b4 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftWorld.java
@@ -512,7 +512,7 @@ public class CraftWorld implements World {
 
     @Override
     public boolean unloadChunk(int x, int z) {
-        return this.unloadChunk(x, z, true);
+        return this.unloadChunkRequest(x, z); // Paper
     }
 
     @Override
